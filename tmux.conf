# prefixキーをC-aに変更する
set -g prefix C-t
unbind c-b

# [p]貼り付け
bind p paste-buffer

# copy mode
bind C-Space copy-mode

# clear history
bind C-\ clear-history

# \ でペインを縦分割 - でペインを横分割
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# new window 同じディレクトリで開く
bind c new-window -c "#{pane_current_path}"

bind-key J command-prompt -p "Join pane from:" "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:" "join-pane -t '%%'"

# ホームディレクトリで開く
bind C-c new-window

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# キーストロークディレイ減らす
set -sg escape-time 0

# ウィンドウのインデックスを1から始める
set -g base-index 1

# 256色端末を使用する
set -g default-terminal "screen-256color"

# バックスクロール行数
set-option -g history-limit 20000

# shell
if "test -d /usr/bin/zsh" "set-option -g default-shell /usr/bin/zsh"
if "test -d /usr/bin/zsh" "set-option -g default-command /usr/bin/zsh"
if "test -d /usr/local/bin/zsh" "set-option -g default-shell /usr/local/bin/zsh"
if "test -d /usr/local/bin/zsh" "set-option -g default-command /usr/local/bin/zsh"

# utf8を有効にする
set-window-option -g utf8 on

# マウス操作を有効にする
#set -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

#------ ステータスバー ------#
# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# 左パネルを設定する
# set -g status-left-length 40
# set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P"
# 右パネルを設定する
set -g status-right-length 90
set -g status-right "#[fg=white] #(whoami)@#h #{battery_percentage} [%Y-%m-%d(%a)%H:%M]"

# ステータスバーのUTF-8サポートを有効にする
set -g status-utf8 on
# リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60

# ヴィジュアルノーティフィケーションを有効にする ウィンドウで動作があるとステータスラインでハイライト
# set -g monitor-activity on
# set -g visual-activity on

# ウィンドウリストの色を設定する
setw -g window-status-fg white
setw -g window-status-bg default
# setw -g window-status-attr dim

# アクティブなウィンドウを目立たせる
setw -g window-status-current-fg white
setw -g window-status-current-bg green
setw -g window-status-current-attr bright

# コマンドラインの色を設定する
# set -g message-fg white
# set -g message-bg black
# set -g message-attr bright

#------ ペイン ------#
# ペインボーダーの色を設定する
set -g pane-border-fg white
set -g pane-border-bg black
# アクティブなペインを目立たせる
# set -g pane-active-border-fg white
# set -g pane-active-border-bg green

#------ tmux plugin manager ------#
set -g @tpm_plugins '\
    tmux-plugins/tpm            \
    tmux-plugins/tmux-resurrect \
    tmux-plugins/tmux-sidebar   \
    tmux-plugins/tmux-yank      \
    tmux-plugins/tmux-battery   \
'
# Initialize tpm
if "test -d ~/.tmux/plugins/tpm/tpm" "run-shell ~/.tmux/plugins/tpm/tpm"


#-----  logging -----#
# v Start logging.
bind-key v  pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%H%%M%%S\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S).log; done "' \; display-message "Logging start."
# C-v C-o Stop logging
bind-key C-v pipe-pane \; display-message "Logging end."
# M-v Open new window. Logging always. (-n is set window name.)
bind-key M-v new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%H%%M%%S\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S).log; done "'
