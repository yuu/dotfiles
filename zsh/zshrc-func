# grpe
dgrep(){
    if [ $# -eq 1 ]; then
        egrep --color=auto -Hnr "$1"
    elif [ $# -eq 2 ]; then
        egrep --color=auto -Hn "$1" -- **/*.$2
    fi
}
pgrep() {
    local cmd=""
    if [ $# -eq 1 ]; then
        cmd="egrep --color=auto -Hnr '$1' |peco"
    elif [ $# -eq 2 ]; then
        cmd="egrep --color=auto -Hnr '$1' **/*.$2 |peco"
    fi
    if [ -n "$cmd" ]; then
        ret=$(eval "$cmd")
        if [ -n "$ret" ]; then
            file=$(echo "$ret" |grep -Po '.+?(?=:\d{1,}:)')
            line=$(echo "$ret" |grep -Po '(?<=:)[0-9]{1,}(?=:)')
            nvim "$file" -c $line
        fi
    fi
}

# mac app execute
run(){
    $1/Contents/MacOS/$(basename $1 .app)
}

remake(){
    make clean
    if [ $? -eq 0 ]; then
        if [ $# -eq 0 ]; then
            make -j$(nproc)
        elif [ $# -eq 1 ]; then
            make $1
        fi
    fi
}

function ghq-list() {
    local selected_dir=$(ghq list | peco --query "$LBUFFER")
    local root_dir=$(ghq root)
    if [ -n "$selected_dir" ]; then
        BUFFER=" cd $root_dir/${selected_dir}"
        zle accept-line
    fi
}
zle -N ghq-list
bindkey '^xl' ghq-list

function proj-list() {
    local root_dir="$HOME/projects"
    local selected_dir="$(cd $root_dir; find . -maxdepth 4 -type d ! -path "*/.*"| sort | uniq | peco)"
    if [ -n "$selected_dir" ]; then
        BUFFER=" cd $root_dir/${selected_dir}"
        zle accept-line
    fi
}
zle -N proj-list
bindkey '^xp' proj-list

function zsh-select-history() {
    BUFFER=$(fc -l -r -n 1 | peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N zsh-select-history
bindkey '^[r' zsh-select-history

function peco-dfind() {
    local selected_dir="$(find . -maxdepth 5 -type f ! -path "*/.*"| sort | peco)"
    BUFFER="${LBUFFER}${selected_dir}"
    CURSOR=$#BUFFER
    zle clear-screen
}
zle -N peco-dfind
bindkey '^xf' peco-dfind
