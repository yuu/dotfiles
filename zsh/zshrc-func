# grpe
dgrep(){
    if [ $# -eq 1 ]; then
        grep --color=auto -Hnr $1
    elif [ $# -eq 2 ]; then
        grep --color=auto -Hn $1 -- **/*.$2
    fi
}
degrep() {
    if [ $# -eq 1 ]; then
        hw --no-group $1
    elif [ $# -eq 2 ]; then
        ret=$(hw --no-group $1 **/*.$2 |peco)
        if [ -n "$ret" ]; then
            file=$(echo $ret |awk '{print $1}' |sed -e 's@[:][0-9].*@@g')
            line=$(echo $ret |awk '{print $1}' |sed -e 's@[^0-9]@@g')
            vi $file -c $line
        fi
    fi
}
edgrep(){
    if [ $# -eq 1 ]; then
        grep --color=auto -EHnr $1
    elif [ $# -eq 2 ]; then
        grep --color=auto -EHn $1 -- **/*.$2
    elif [ $# -gt 2 ]; then
        x=$1
        shift
        y=`echo $* | sed -e 's/ \+/|/g'`
        zsh -c "grep -E --color=auto -Hn $x -- **/*.($y)"
    fi
}
pdgrep(){
    if [ $# -eq 1 ]; then
        grep --color=auto -PHnr $1
    elif [ $# -eq 2 ]; then
        grep --color=auto -PHn $1 -- **/*.$2
    elif [ $# -gt 2 ]; then
        x=$1
        shift
        y=`echo $* | sed -e 's/ \+/|/g'`
        zsh -c "grep -P --color=auto -Hn $x -- **/*.($y)"
    fi
}

# mac app execute
run(){
    $1/Contents/MacOS/$(basename $1 .app)
}

# make
mmake(){
    if [ $? -eq 0 ]; then
        if [ $# -eq 0 ]; then
            make -j $(nproc)
        elif [ $# -eq 1 ]; then
            make $1
        fi
    fi
}

remake(){
    make clean
    if [ $? -eq 0 ]; then
        if [ $# -eq 0 ]; then
            make -j$(nproc)
        elif [ $# -eq 1 ]; then
            make $1
        fi
    fi
}

function ghq-list() {
    local selected_dir=$(ghq list | peco --query "$LBUFFER")
    local root_dir=$(ghq root)
    if [ -n "$selected_dir" ]; then
        BUFFER=" cd $root_dir/${selected_dir}"
        zle accept-line
    fi
}
zle -N ghq-list
bindkey '^xl' ghq-list

function zsh-select-history() {
    BUFFER=$(fc -l -r -n 1 | peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N zsh-select-history
bindkey '^[r' zsh-select-history

function peco-dfind() {
    local selected_dir="$(find . -maxdepth 5 -type f ! -path "*/.*"| sort | peco)"
    BUFFER="${LBUFFER}${selected_dir}"
    CURSOR=$#BUFFER
    zle clear-screen
}
zle -N peco-dfind
bindkey '^xf' peco-dfind
